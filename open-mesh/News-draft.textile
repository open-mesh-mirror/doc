h1. DRAFT: Batman-adv 2023.2 released

Aug 4th, 2023. Today the B.A.T.M.A.N. team publishes the August 2023 update to batman-adv! Alfred now allows to send data via unix socket to a primary server when none of the interfaces is ready. Also several bug fixes and code cleanups are included in this version.

As the kernel module always depends on the Linux kernel it is compiled against, it does not make sense to provide binaries on our website. As usual, you will find the signed tarballs in our download section:

https://downloads.open-mesh.org/batman/releases/batman-adv-2023.2/

h2. Thanks

Thanks to all people sending in patches:

* Marek Lindner <mareklindner@neomailbox.ch>
* Remi Pommarel <repk@triplefau.lt>
* Simon Wunderlich <sw@simonwunderlich.de>
* Sven Eckelmann <sven@narfation.org> 
* Vladislav Efanov <VEfanov@ispras.ru>

h2. batman-adv

<pre>
$ git describe origin/main
v2023.1-13-g67f427d8
$ range=v2023.1..v2023.1-13-g67f427d8
$ git shortlog --email --no-merges "${range}"
$ git log --no-merges "${range}"|grep -e '\(Reported\|Tested\|Acked\|Reviewed-by\|Co-authored-by\)-by'|sed 's/.*:/*/'|sort|uniq



features
========


new kernel version
==================



coding style cleanup/refactoring
================================

various
=======

      batman-adv: compat: Use native kstrtox.h for 5.10.185

bugfixes
========

      batman-adv: Do not get eth header before batadv_check_management_packet
      batman-adv: Trigger events for auto adjusted MTU
      batman-adv: Don't increase MTU when set by user
      batman-adv: Broken sync while rescheduling delayed work



2023.2 (2023-08-04)
===================

* support latest kernels (4.14 - 6.5)
* bugs squashed:

  - avoid potential invalid memory access when processing ELP/OGM2 packets
  - drop pending DAT worker when interface shuts down
  - inform network stack about automatically adjusted MTUs
  - keep user defined MTU limit when MTU is recalculated
  - fix packet memory leak when sending OGM2 via inactive interfaces
  - fix TT memory leak for roamed back clients
</pre>

h2. batctl

<pre>
$ git describe origin/main
v2023.1-1-g2cfb13e
$ range=v2023.1..v2023.1-1-g2cfb13e
$ git shortlog --email --no-merges "${range}"
$ git log --no-merges "${range}"|grep -e '\(Reported\|Tested\|Acked\|Reviewed-by\|Co-authored-by\)-by'|sed 's/.*:/*/'|sort|uniq


features
========



coding style cleanup/refactoring
================================




bugfixes
========



2023.2 (2023-08-04)
===================

* (no changes)

</pre>

h2. alfred

<pre>
$ git describe origin/main
v2023.1-2-g94b3c4b
$ range=v2023.1..v2023.1-2-g94b3c4b
$ git shortlog --email --no-merges "${range}"
$ git log --no-merges "${range}"|grep -e '\(Reported\|Tested\|Acked\|Reviewed-by\|Co-authored-by\)-by'|sed 's/.*:/*/'|sort|uniq




2023.2 (2023-08-04)
===================

* receive data with valid source on unix sock without active interface
</pre>


Happy routing,

The B.A.T.M.A.N. team